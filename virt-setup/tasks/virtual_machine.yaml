- name: Create a directory for Virtual Machines
  file:
    path: "{{ vm_directory }}"
    state: directory
    owner: root
    group: root
    mode: 0775
    recurse: yes

- name: Create a Virtual Machine disk file
  shell: qemu-img create -f qcow2 {{ vm_directory }}/{{ vm_name }}.qcow2 {{ vm_size }}

#- name: Move rhel8 base image
#  shell: mv {{ rhel8_qcow2_file }} {{ vm_directory}}/{{ vm_name }}.qcow2

- name: Push base image to the VM disk
  shell: virt-resize -v  --expand /dev/sda3 {{ rhel8_qcow2_file }} {{ vm_directory}}/{{ vm_name }}.qcow2
  environment:
    LIBGUESTFS_PATH: "{{ ansible_env.HOME }}/appliance"
    LIBGUESTFS_BACKEND: direct
  ignore_error: yes
  tags:
    - rhel8_qcow2_workaround

- name: Expand root parition of the VM
  shell:  virt-customize -v -a {{ vm_directory}}/{{ vm_name }}.qcow2  --run-command 'xfs_growfs /'
  environment:
    LIBGUESTFS_PATH: "{{ ansible_env.HOME }}/appliance"
    LIBGUESTFS_BACKEND: direct
  ignore_error: yes
  tags:
    - rhel8_qcow2_workaround

- name: Set root password
  shell: virt-customize -a {{ vm_directory}}/{{ vm_name }}.qcow2 --root-password password:{{ vm_root_password }}
  environment:
    LIBGUESTFS_PATH: "{{ ansible_env.HOME }}/appliance"
    LIBGUESTFS_BACKEND: direct
  tags:
    - rhel8_qcow2_workaround

#- name: Remove cloud init
#  shell: virt-customize -a {{ vm_directory}}/{{ vm_name }}.qcow2 --run-command 'yum remove cloud-init* -y'
#  environment:
#    LIBGUESTFS_PATH: "{{ ansible_env.HOME }}/appliance"
#    LIBGUESTFS_BACKEND: direct
#  tags:
#    - rhel8_qcow2_workaround

#- name: Create virtual machine from backing file
#  shell: qemu-img create -f qcow2 -b {{ vm_directory}}/rhel8_base.qcow2 {{ vm_directory }}/{{ vm_name }}.qcow2 {{ vm_size }}
#  tags:
#    - create_vm

#- name: Set hostname
#  command: virt-customize -a {{ vm_directory }}/{{ vm_name }}.qcow2 --run-command 'hostnamectl set-hostname --static {{ vm_hostname }}'
#  ignore_errors: yes
#  environment:
#    LIBGUESTFS_PATH: "{{ ansible_env.HOME }}/appliance"
#    LIBGUESTFS_BACKEND: direct
#  tags:
#    - rhel8_qcow2_workaround

- name: SSH fix
  command: virt-customize -a {{ vm_directory }}/{{ vm_name }}.qcow2 --run-command "sed -i 's/#MaxAuthTries [0-9]/MaxAuthTries = 8/' /etc/ssh/sshd_config" --selinux-relabel
  ignore_errors: yes
  environment:
    LIBGUESTFS_PATH: "{{ ansible_env.HOME }}/appliance"
    LIBGUESTFS_BACKEND: direct
  tags:
    - rhel8_qcow2_workaround

- name: Clear ifcfg-eth0 file
  shell: virt-customize -a {{ vm_directory }}/{{ vm_name }}.qcow2 --run-command 'rm /etc/sysconfig/network-scripts/ifcfg-eth0 '
  ignore_errors: yes
  environment:
    LIBGUESTFS_PATH: "{{ ansible_env.HOME }}/appliance"
    LIBGUESTFS_BACKEND: direct
  tags:
    - rhel8_qcow2_workaround

- name: Set ifcfg-eth0 file
  shell: virt-customize -a {{ vm_directory}}/{{ vm_name }}.qcow2 --run-command 'echo {{ item }}  >> /etc/sysconfig/network-scripts/ifcfg-eth0 '
  with_items: 
    - DEVICE="eth0"
    - ONBOOT="yes"
    - TYPE="Ethernet"
    - PEERDNS="yes"
    - IPV6INIT="no"
    - IPADDR={{ vm_network1_ip }}
    - NETMASK={{ vm_network1_netmask }}
    - GATEWAY={{ vm_network1_gateway }}
    - BOOTPROTO="static"
    - DNS1={{ vm_network1_gateway }}
  ignore_errors: yes
  environment:
    LIBGUESTFS_PATH: "{{ ansible_env.HOME }}/appliance"
    LIBGUESTFS_BACKEND: direct
  tags:
    - rhel8_qcow2_workaround

- name: Set ifcfg-eth1 file
  shell: virt-customize -a {{ vm_directory}}/{{ vm_name }}.qcow2 --run-command 'echo {{ item }}  >> /etc/sysconfig/network-scripts/ifcfg-eth1'
  with_items:
    - DEVICE="eth1"
    - ONBOOT="yes"
    - TYPE="Ethernet"
    - PEERDNS="yes"
    - IPV6INIT="no"
    - BOOTPROTO="none"
  ignore_errors: yes
  environment:
    LIBGUESTFS_PATH: "{{ ansible_env.HOME }}/appliance"
    LIBGUESTFS_BACKEND: direct
  tags:
    - rhel8_qcow2_workaround

- name: Boot VM
  shell: virt-install --ram {{ vm_memory_size }}  --vcpus {{ vm_cpu_count }}  --os-variant=rhel8.0 --disk path={{ vm_directory}}/{{ vm_name }}.qcow2,device=disk,bus=virtio,format=qcow2 --network network={{ network1_name }},model=virtio  --network network={{ network2_name }},model=virtio --noautoconsole --vnc --hvm --import --name {{ vm_name }}
  tags:
    - create_vm
    - launch_vm
